{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class TokenInterceptor {\n  auth;\n  constructor(auth) {\n    this.auth = auth;\n  }\n  intercept(request, next) {\n    const token = this.auth.token;\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n  static ɵfac = function TokenInterceptor_Factory(t) {\n    return new (t || TokenInterceptor)(i0.ɵɵinject(i1.AuthService));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenInterceptor,\n    factory: TokenInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["TokenInterceptor","auth","constructor","intercept","request","next","token","clone","setHeaders","Authorization","handle","i0","ɵɵinject","i1","AuthService","factory","ɵfac"],"sources":["/home/tiagoadp/TRABALHO/personal/curotec/frontend/src/app/core/auth/token.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(private auth: AuthService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const token = this.auth.token;\n    \n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n    \n    return next.handle(request);\n  }\n}\n"],"mappings":";;AAWA,OAAM,MAAOA,gBAAgB;EACPC,IAAA;EAApBC,YAAoBD,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCE,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,MAAMC,KAAK,GAAG,IAAI,CAACL,IAAI,CAACK,KAAK;IAE7B,IAAIA,KAAK,EAAE;MACTF,OAAO,GAAGA,OAAO,CAACG,KAAK,CAAC;QACtBC,UAAU,EAAE;UACVC,aAAa,EAAE,UAAUH,KAAK;;OAEjC,CAAC;;IAGJ,OAAOD,IAAI,CAACK,MAAM,CAACN,OAAO,CAAC;EAC7B;;qBAfWJ,gBAAgB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;;WAAhBd,gBAAgB;IAAAe,OAAA,EAAhBf,gBAAgB,CAAAgB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}