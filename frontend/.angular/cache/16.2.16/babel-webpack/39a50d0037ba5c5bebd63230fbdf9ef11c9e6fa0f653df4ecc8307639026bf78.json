{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { loadOrders, loadOrdersFailure, loadOrdersSuccess } from './orders.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../../../core/services/orders.service\";\nexport let OrdersEffects = /*#__PURE__*/(() => {\n  class OrdersEffects {\n    actions$;\n    ordersService;\n    loadOrders$ = createEffect(() => this.actions$.pipe(ofType(loadOrders), mergeMap(() => this.ordersService.getOrders().pipe(map(orders => loadOrdersSuccess({\n      orders\n    })), catchError(error => [loadOrdersFailure({\n      error: error.message\n    })])))));\n    constructor(actions$, ordersService) {\n      this.actions$ = actions$;\n      this.ordersService = ordersService;\n    }\n    static ɵfac = function OrdersEffects_Factory(t) {\n      return new (t || OrdersEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.OrdersService));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: OrdersEffects,\n      factory: OrdersEffects.ɵfac\n    });\n  }\n  return OrdersEffects;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}